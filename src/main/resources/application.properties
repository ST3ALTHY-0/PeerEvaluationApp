spring.application.name=Peerevualuationapplication
debug = true
server.port=8081

#Auth
client.id=?
auth.endpoint=https://brightspace.example.com/d2l/oauth2/authorize
redirect.uri=http://localhost:8080/auth/callback 

#Google Auth
spring.security.oauth2.client.registration.google.client-id=1074602340598-ju6tvlh36vnm2s2mnu49b07qid14j316.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId} 
#registrationId will get replaced with 'google', or 'facebook', when they redirect back here, makes it better to handle multiple OAuth2 providers
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

#Database (random db for now)
#spring.datasource.url=jdbc:mysql://autorack.proxy.rlwy.net:54810/railway 
spring.datasource.url=jdbc:mysql://localhost:3306/peer_evaluation
spring.datasource.username=root
spring.datasource.password=Chance#0418
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

#Thymeleaf
#spring.thymeleaf.enabled=false



